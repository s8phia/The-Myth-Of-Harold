#BlueJ class context
comment0.target=DungeonWorld
comment0.text=\r\n\ The\ dungeon\ world,\ where\ the\ \ magic\ happens.\ \r\n\ \r\n\ @author\ Jessica\ Biro\r\n\ @version\ January\ 2024\r\n
comment1.params=type\ fileName\ loadWorld
comment1.target=DungeonWorld(int,\ java.lang.String,\ boolean)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ DungeonWorld.\r\n\ \r\n\ @param\ type\ The\ type\ of\ player\r\n
comment10.params=x1\ x2\ y1\ y2
comment10.target=double\ calculateDistanceBetween(int,\ int,\ int,\ int)
comment10.text=\r\n\ Calculates\ the\ distance\ between\ two\ points\ on\ a\ cartesian\ plane\ using\ pythagorean\ theorem.\r\n\ @param\ x1\ \ \ \ The\ X-coordinate\ of\ the\ first\ point\ \r\n\ @param\ x2\ \ \ \ The\ X-coordinate\ of\ the\ second\ point\ \r\n\ @param\ y1\ \ \ \ The\ Y-coordinate\ of\ the\ first\ point\ \r\n\ @param\ y2\ \ \ \ The\ Y-coordinate\ of\ the\ second\ point\ \r\n\ @return\ double\ The\ distance\ between\ the\ two\ points.\r\n
comment11.params=type
comment11.target=void\ setLadder(int)
comment11.text=\r\n\ Sets\ the\ ladder\ on\ each\ floor\ the\ furthest\ away\ from\ the\ spawn\ location\ of\ the\ player.\r\n
comment12.params=
comment12.target=void\ setRoomNums()
comment12.text=\r\n\ Set\ each\ room\ their\ ID\ number\ after\ initialized.\ \r\n
comment13.params=
comment13.target=void\ setPathFinders()
comment13.text=\r\n\ Set\ pathfinders\ for\ each\ rooms\ after\ rooms\ generated.\ \r\n
comment14.params=
comment14.target=void\ updateCurrentRoom()
comment14.text=\r\n\ Update\ the\ current\ room\ based\ on\ the\ player\ location.\ For\ pathfinding\ reasons.\ \r\n
comment15.params=n\ roomNum\ enemies
comment15.target=void\ addEnemiesToRoom(int,\ int,\ java.util.ArrayList)
comment15.text=\r\n\ Make\ sure\ not\ to\ call\ this\ if\ there\ are\ no\ locations\ in\ the\ room\ (FLOOR)\ available.\r\n\ Add\ enemies\ to\ a\ specific\ room,\ and\ populates\ that\ rooms\ arraylist\ of\ enemies.\r\n\ \r\n\ @param\ n\ \ \ \ \ \ \ \ \ The\ amount\ of\ enemies\ in\ that\ should\ be\ added\ to\ the\ room\r\n\ @param\ roomNum\ \ \ The\ room\ number\ that\ the\ enemies\ should\ be\ added\ to\r\n\ @param\ enemies\ \ \ The\ arraylist\ of\ enemies\ that\ should\ be\ updated\ with\ the\ enemies\ in\ the\ specified\ room\r\n
comment16.params=
comment16.target=void\ updateRoomMap()
comment17.params=a\ b
comment17.target=double\ calculateDistanceBetween(greenfoot.Actor,\ greenfoot.Actor)
comment17.text=\r\n\ Calculates\ the\ distance\ between\ two\ actors\ x\ and\ y\ coordinates\ \r\n\ @param\ a\ \ \ \ \ The\ first\ actor\r\n\ @param\ b\ \ \ \ \ The\ second\ actor\r\n\ @return\ double\ The\ distance\ between\ the\ two\ actors\r\n
comment18.params=showPath\ updateEnemy\ enemies
comment18.target=void\ updateEnemyPaths(boolean,\ boolean,\ java.util.ArrayList)
comment18.text=\r\n\ Update\ the\ enemy\ paths\ as\ the\ player\ moves.\r\n\ \r\n\ @param\ showPath\ \ \ \ \ \ Should\ the\ enemy\ path\ calculation\ be\ shown\r\n\ @param\ updateEnemy\ \ \ Should\ the\ enemy\ be\ updated\r\n\ @param\ enemies\ \ \ \ \ \ \ ArrayList\ of\ enemies\ in\ the\ current\ room\r\n
comment19.params=enemies
comment19.target=void\ updateVisibleEnemies(java.util.ArrayList)
comment19.text=\r\n\ Updates\ the\ location\ of\ enemies\ that\ are\ supposed\ to\ be\ on\ the\ screen\ \r\n\ (the\ scrolling\ forces\ the\ enemies\ to\ "move"\ off\ screen\ in\ their\ respective\ rooms)\r\n\ \r\n\ @param\ enemies\ \ \ The\ ArrayList\ of\ enemies\ that\ should\ be\ updated\ on\ screen\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Constantly\ check\ keys\ and\ update\ rooms\ and\ stats,\ if\ it's\ the\ boss\ world\ it'll\ lock\ the\ scrolling\ once\ the\ boss\ appears\ on\ the\ screen.\r\n\ Otherwise\ keep\ enemy\ pathfinding\ and\ add\ enemies\ and\ mini\ bosses\ to\ rooms\ as\ usual.\ \r\n
comment20.params=map\ currentX\ currentY\ targetX\ targetY
comment20.target=boolean\ moveIfPossible(int[][],\ int,\ int,\ int,\ int)
comment20.text=\r\n\ Enemy\ tries\ to\ move\ to\ nearest\ floor\ if\ possible,\ avoiding\ other\ enemies\r\n\ @param\ map\ \ \ \ \ \ \ The\ map\ of\ the\ room\ that\ the\ enemies\ should\ be\ moving\ in\r\n\ @param\ currentX\ \ The\ current\ X\ of\ the\ enemy\r\n\ @param\ currentY\ \ The\ current\ Y\ of\ the\ enemy\r\n\ @param\ targetX\ \ \ The\ "target"\ X\ (the\ player\ x)\r\n\ @param\ targetY\ \ \ The\ "target"\ Y\ (the\ player\ y)\r\n\ \r\n\ @return\ boolean\ \ Can\ the\ enemy\ move?\r\n
comment21.params=map\ x\ y
comment21.target=int[]\ getRandomPosition(int[][],\ int,\ int)
comment22.params=x\ y
comment22.target=int[]\ worldToMap(int,\ int)
comment22.text=\r\n\ Takes\ in\ world\ x,\ y\ pixel\ coordinates\ and\ converts\ to\ indices\ in\ \r\n\ the\ map\ 2d\ array.\r\n\ The\ current\ window\ location\ is\ taken\ into\ account.\r\n\ \r\n\ @param\ x\ The\ x\ coordinate\ in\ pixels\ on\ the\ window\r\n\ @param\ y\ The\ y\ coordinate\ in\ pixels\ on\ the\ window\r\n
comment23.params=x\ y
comment23.target=int[]\ mapToWorld(int,\ int)
comment23.text=\r\n\ Takes\ in\ [x][y]\ indices\ and\ converts\ to\ x,y\ world\ coordinates\ (pixel\ values)\r\n\ Need\ to\ sanitize\ the\ return\ coordinates\ to\ make\ sure\ they\ are\ within\ the\ window\ bounds\ before\ displaying\ them\r\n\ ONLY\ USE\ WITH\ WINDOW\ COORDINATES\r\n\ INPUT\:\ window\ cells\r\n\ OUTPUT\:\ pixels\r\n\ \r\n\ @param\ x\ The\ x\ coordinate\ in\ cells\ on\ the\ map\r\n\ @param\ y\ The\ y\ coordinate\ in\ cells\ on\ the\ map\r\n
comment24.params=x\ y
comment24.target=int[]\ windowToMap(int,\ int)
comment24.text=\r\n\ Takes\ in\ the\ window's\ [x][y]\ cell\ coordinates\ and\ \r\n\ converts\ to\ [x][y]\ cell\ coordinates\ in\ the\ map.\r\n\ Returns\ indices\ instead\ of\ pixel\ coords.\r\n\ \r\n\ @param\ x\ The\ x\ coordinate\ of\ the\ window\ in\ cells\r\n\ @param\ y\ The\ y\ coordinate\ of\ the\ window\ in\ cells\r\n
comment25.params=x\ y
comment25.target=int[]\ mapToRoom(int,\ int)
comment25.text=\r\n\ Takes\ in\ the\ world\ maps\ [x][y]\ cell\ coordinates\r\n\ and\ converts\ them\ into\ cell\ coordinates\ on\ the\ room\ map\r\n\ \r\n\ @param\ x\ \ \ \ \ The\ x\ coordinate\ of\ the\ map\r\n\ @param\ y\ \ \ \ \ The\ y\ coordinate\ of\ the\ map\r\n
comment26.params=x\ y
comment26.target=int[]\ roomToMap(int,\ int)
comment26.text=\r\n\ Takes\ in\ the\ room\ maps\ [x][y]\ cell\ coordinates\r\n\ and\ converts\ them\ into\ cell\ coordinates\ on\ the\ world\ map\r\n\ \r\n\ @param\ x\ \ \ \ \ The\ x\ coordinate\ of\ the\ room\r\n\ @param\ y\ \ \ \ \ The\ y\ coordinate\ of\ the\ room\r\n
comment27.params=x\ y\ roomNum
comment27.target=int[]\ roomToMap(int,\ int,\ int)
comment27.text=\r\n\ Takes\ in\ the\ room\ maps\ [x][y]\ cell\ coordinates\r\n\ and\ converts\ them\ into\ cell\ coordinates\ on\ the\ world\ map\r\n\ but\ only\ using\ a\ given\ room\ number\r\n\ \r\n\ @param\ x\ \ \ \ \ \ \ \ \ The\ x\ coordinate\ of\ the\ room\r\n\ @param\ y\ \ \ \ \ \ \ \ \ The\ y\ coordinate\ of\ the\ room\r\n\ @param\ roomNum\ \ \ The\ number\ of\ the\ room\ in\ which\ the\ coordinates\ are\ being\ converted\ from\r\n
comment28.params=x\ y
comment28.target=void\ setEnd(int,\ int)
comment28.text=\r\n\ Sets\ the\ end\r\n\ @param\ x\ \ \ \ \ The\ x\ coordinate\ of\ the\ end\r\n\ @param\ y\ \ \ \ \ The\ y\ coordinate\ of\ the\ end\r\n
comment29.params=x\ y
comment29.target=boolean\ inWorld(int,\ int)
comment29.text=\r\n\ Returns\ whether\ the\ world\ coordinates\ are\ valid\r\n\ @param\ x\ \ \ \ \ X-coordinate\r\n\ @param\ y\ \ \ \ \ Y-coordinate\r\n
comment3.params=
comment3.target=void\ checkPause()
comment3.text=\r\n\ Did\ the\ player\ pause\ the\ game\r\n
comment30.params=
comment30.target=Player\ getPlayer()
comment30.text=\r\n\ Getter\ method\ for\ a\ reference\ to\ the\ current\ player\r\n\ @return\ Player\ \ \ \ \ \ \ The\ current\ player.\ \r\n
comment31.params=
comment31.target=PathFinder\ getPathFinder()
comment31.text=\r\n\ Getter\ method\ for\ a\ reference\ to\ the\ current\ pathfinder\r\n\ @return\ PathFinder\ \ \ \ \ \ \ The\ current\ pathfinder.\ \r\n
comment32.params=
comment32.target=void\ fixPathing()
comment32.text=\r\n\ Fixes\ the\ pathing\ for\ the\ world\ generation\ by\ adding\ walls\ around\r\n\ the\ floors\ that\ are\ touching\ the\ void\r\n
comment33.params=
comment33.target=void\ displayMiniMap()
comment33.text=\r\n\ Constantly\ checks\ if\ the\ user\ presses\ 'm'\ and\ shows\ the\ mini\ map\ of\ the\ world.\r\n
comment34.params=dir
comment34.target=void\ shiftWindow(int)
comment34.text=\r\n\ Shifts\ the\ actual\ window\ and\ all\ the\ actors\ inside\ in\ the\ given\ direction.\r\n\ 0\ -\ right\r\n\ 1\ -\ left\r\n\ 2\ -\ up\r\n\ 3\ -\ down\r\n\ \r\n\ @param\ dir\ The\ direction\ in\ which\ the\ window\ should\ shift\r\n
comment35.params=
comment35.target=void\ boundWindow()
comment36.params=map
comment36.target=void\ displayWindow(int[][])
comment37.params=num
comment37.target=int\ rand(int)
comment37.text=\r\n\ Helper\ method\ to\ get\ a\ random\ integer\r\n\ @param\ num\ The\ maximum\ integer\ possible\r\n
comment38.params=
comment38.target=int[][]\ generateBossWorld()
comment38.text=\r\n\ Generate\ the\ final\ boss\ world.\ (Two\ rooms)\ \r\n
comment39.params=
comment39.target=int[][]\ generateRooms()
comment39.text=\r\n\ Autogenerates\ a\ 2D\ map\ of\ the\ rooms\r\n
comment4.params=
comment4.target=void\ checkMiniBoss()
comment4.text=\r\n\ Is\ the\ mini\ boss\ defeated,\ can\ the\ player\ continue\ to\ the\ next\ level\r\n
comment40.params=
comment40.target=void\ setRoomMaps()
comment40.text=\r\n\ Sets\ individual\ room\ maps\ for\ every\ room\ on\ the\ arraylist,\ used\ for\ enemy\ pathfinding.\ \r\n
comment41.params=
comment41.target=void\ started()
comment41.text=\r\n\ Starts\ and\ loops\ background\ music\ \r\n
comment42.params=
comment42.target=void\ stopped()
comment42.text=\r\n\ Stops\ music\ after\ simulation\ has\ paused\ \r\n
comment5.params=
comment5.target=void\ pathFindEnemies()
comment5.text=\r\n\ Enemies\ pathfind\ on\ a\ counter\ to\ avoid\ too\ much\ lag\r\n
comment6.params=
comment6.target=void\ addMiniBossToRoom()
comment6.text=\r\n\ Only\ add\ one\ mini\ boss\ per\ level,\ added\ based\ on\ the\ ladder\ location\ and\ floor\ level.\ \r\n
comment7.params=up
comment7.target=void\ bossShift(boolean)
comment7.text=\r\n\ Shift\ the\ screen\ in\ the\ boss\ world\ to\ fit\ and\ lock\ the\ scrolling.\ \r\n
comment8.params=
comment8.target=void\ changeToBossLvl()
comment8.text=\r\n\ Change\ the\ level\ to\ the\ boss\ world,\ generate\ the\ boss\ world\ and\ clear\ all\ the\ enemies\ and\ maps.\ \r\n
comment9.params=
comment9.target=void\ changeFloors()
comment9.text=\r\n\ Change\ floors,\ initialize\ all\ maps\ and\ enemies\ again.\ \r\n
numComments=43
